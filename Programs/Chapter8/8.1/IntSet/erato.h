/***************************************************************
*  Структуры и алгоритмы обработки данных:                     *
*  объектно-ориентированный подход и реализация на C++         *
*      Глава 8. Функции как носитель информации                *
*          8.1. Еще о представлении множеств                   *
*                                                              *
*  Автор    : А.Кубенский                                      *
*  Файл     : erato.h                                          *
*  Описание : Реализация алгоритма вычисления последовательно- *
*             сти простых чисел с помощью "решета Эратосфена"  *
***************************************************************/

#ifndef __ERATO_H
#define __ERATO_H

#include "intset.h"

//-------------------------------------------------------------
// Класс, представляющий множество всех натуральных чисел,
// больших единицы
//-------------------------------------------------------------
class From2 : public IntSet {
public :
  bool contains(int n) const { return n >= 2; }
};

//-------------------------------------------------------------
// Класс для задания алгоритма фильтрации множества
// согласно алгоритму "решета Эратосфена"
//-------------------------------------------------------------
class Filter : public IntSet {
  int f;                 // Множитель, задающий вычеркиваемые числа
  SmartPtr<IntSet> set;  // Исходное множество

public :
  // Конструктор запоминает в классе исходные данные:
  Filter(int f, const SmartPtr<IntSet> & set) : f(f), set(set) {}

  // Характеристическая функция результирующего множества:
  bool contains(int n) const {
    return n % f != 0 && set->contains(n);
  }
};

// Функции для реализации алгоритма "решета Эратосфена"
extern SmartPtr<IntSet> filter(int n, const SmartPtr<IntSet> & set);
extern SmartPtr<IntSet> sieve(int max, const SmartPtr<IntSet> & set);

#endif
