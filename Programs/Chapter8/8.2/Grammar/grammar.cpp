/***************************************************************
*  Структуры и алгоритмы обработки данных:                     *
*  объектно-ориентированный подход и реализация на C++         *
*      Глава 8. Функции как носитель информации                *
*          8.2. Задача о расстановке ферзей на шахматной доске *
*               и другие задачи                                *
*                                                              *
*  Автор    : А.Кубенский                                      *
*  Файл     : grammar.cpp                                      *
*  Описание : Определение операций над языками                 *
***************************************************************/

#include "grammar.h"

//--------------------------------------------------------------
// Операция выделения префикса
//--------------------------------------------------------------
SmartPtr<Lang> operator ^ (const SmartPtr<Lang> & lang,
                           const string & prefix) {
  return SmartPtr<Lang>(new PrefixLang(lang, prefix));
}

//--------------------------------------------------------------
// Операция альтернации
//--------------------------------------------------------------
SmartPtr<Lang> operator | (const SmartPtr<Lang> & lang1,
                           const SmartPtr<Lang> & lang2) {
  return SmartPtr<Lang>(new AltLang(lang1, lang2));
}

//--------------------------------------------------------------
// Операция катенации
//--------------------------------------------------------------
SmartPtr<Lang> operator & (const SmartPtr<Lang> & lang1,
                           const SmartPtr<Lang> & lang2) {
  return SmartPtr<Lang>(new CatLang(lang1, lang2));
}

//--------------------------------------------------------------
// Операция непустой итерации
//--------------------------------------------------------------
SmartPtr<Lang> operator ~ (const SmartPtr<Lang> & lang) {
  return SmartPtr<Lang>(new IterLang(lang));
}

//--------------------------------------------------------------
// Операция добавления слова в язык
//--------------------------------------------------------------
SmartPtr<Lang> operator + (const SmartPtr<Lang> & lang,
                           const string & word) {
  return SmartPtr<Lang>(new PlusWordLang(lang, word));
}

//--------------------------------------------------------------
// Операция удаления слова из языка
//--------------------------------------------------------------
SmartPtr<Lang> operator - (const SmartPtr<Lang> & lang,
                           const string & word) {
  return SmartPtr<Lang>(new MinusWordLang(lang, word));
}

//--------------------------------------------------------------
// Операция добавления пустого слова
//--------------------------------------------------------------
SmartPtr<Lang> operator + (const SmartPtr<Lang> & lang) {
  return operator+(lang, "");
}
