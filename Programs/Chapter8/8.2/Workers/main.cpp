/***************************************************************
*  Структуры и алгоритмы обработки данных:                     *
*  объектно-ориентированный подход и реализация на C++         *
*      Глава 8. Функции как носитель информации                *
*          8.2. Задача о расстановке ферзей на шахматной доске *
*               и другие задачи                                *
*                                                              *
*  Автор       : А. Кубенский                                  *
*  Файл        : main.cpp                                      *
*  Описание    : Проверка различных алгоритмов решения задачи  *
*                о распределении рабочих мест                  *
***************************************************************/

#include "workers.h"
#include <time.h>

// Матрица, содержащая данные о производительности
double W [][10] = {
  {5, 4, 4, 6, 4, 4, 6, 6, 6, 5},  // Производительность рабочих на месте номер 0
  {5, 7, 7, 6, 5, 7, 7, 6, 6, 5},  // Производительность рабочих на месте номер 1
  {2, 2, 3, 3, 2, 3, 2, 1, 2, 2},  // Производительность рабочих на месте номер 2
  {2, 2, 4, 2, 4, 2, 2, 4, 3, 3},  // Производительность рабочих на месте номер 3
  {7, 8, 8, 8, 6, 7, 7, 6, 7, 6},  // Производительность рабочих на месте номер 4
  {1, 1, 2, 2, 2, 3, 3, 3, 4, 4},  // Производительность рабочих на месте номер 5
  {9, 7, 9, 9, 8, 7, 8, 8, 9, 8},  // Производительность рабочих на месте номер 6
  {5, 3, 3, 4, 2, 2, 4, 5, 2, 5},  // Производительность рабочих на месте номер 7
  {5, 5, 4, 5, 6, 4, 6, 4, 7, 5},  // Производительность рабочих на месте номер 8
  {3, 5, 3, 5, 4, 4, 3, 5, 4, 3}   // Производительность рабочих на месте номер 9
};
double W1 [][10] = {
  {1, 5, 3, 2, 7, 9, 8, 4, 6, 0},  // Производительность рабочих на месте номер 0
  {9, 8, 7, 6, 5, 4, 3, 2, 1, 0},  // Производительность рабочих на месте номер 1
  {3, 2, 1, 9, 0, 7, 5, 8, 6, 4},  // Производительность рабочих на месте номер 2
  {2, 9, 1, 6, 5, 3, 7, 8, 0, 4},  // Производительность рабочих на месте номер 3
  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9},  // Производительность рабочих на месте номер 4
  {0, 1, 2, 3, 9, 8, 7, 6, 5, 4},  // Производительность рабочих на месте номер 5
  {5, 4, 6, 3, 7, 2, 8, 1, 9, 0},  // Производительность рабочих на месте номер 6
  {0, 1, 9, 8, 2, 3, 7, 6, 4, 5},  // Производительность рабочих на месте номер 7
  {3, 4, 5, 6, 7, 8, 9, 0, 1, 2},  // Производительность рабочих на месте номер 8
  {8, 0, 7, 6, 5, 4, 3, 9, 2, 1}   // Производительность рабочих на месте номер 9
};

double output(int wp, int wr) { return W[wp][wr]; }
double output1(int wp, int wr) { return W1[wp][wr]; }

int main() {
  cout << "========= Soft...  ===========\n";
  time_t t = time(0);
  SmartPtr<Assignment> best = bestAssignment(output, 10);
  t = time(0) - t;
  best->print(cout);
  cout << "Best productivity = " << best->prod() << "; time elapsed = " << t << endl << endl;

  cout << "========= Sharp... ===========\n";
  t = time(0);
  best = bestAssignment(output1, 10);
  t = time(0) - t;
  best->print(cout);
  cout << "Best productivity = " << best->prod() << "; time elapsed = " << t << endl;

  return 0;
}
