/***************************************************************
*  Структуры и алгоритмы обработки данных:                     *
*  объектно-ориентированный подход и реализация на C++         *
*      Глава 3. Обработка текстов                              *
*          3.2. Хеширование и поиск в хеш-таблицах             *
*                                                              *
*  Автор    : А.Кубенский                                      *
*  Файл     : dictionary.h                                     *
*  Описание : Представление словаря в виде хеш-таблицы         *
***************************************************************/

#ifndef __DICTIONARY_H
#define __DICTIONARY_H

#include <string>

using namespace std;

//=============================================================
// Класс, представляющий словарь в виде хеш-таблицы
//=============================================================
class HashDictionary {

protected:

#ifndef P
#define P        557
#endif
#ifndef Q
#define Q        811
#endif
#ifndef LENGTH
#define LENGTH   1000
#endif

  string *dict[LENGTH];      // хранилище на 1000 слов

  /******************************************************
   * Функция определяет код буквы как ее порядковый   
   * номер в алфавите русского языка 
   ******************************************************/
  static int code(const char c);

public:

  /******************************************************
   * Функция расстановки, основанная на сложении кодов
   * букв со смещением, соответствующим их позиции
   ******************************************************/
  static int hash(const string & str);

protected:

  /******************************************************
   * Внутренняя функция поиска позиции слова в словаре
   ******************************************************/
  int findPos(const string & word) const;

public:
  /******************************************************
   * Конструктор записывает в словарь пустые ссылки
   ******************************************************/
  HashDictionary() { memset(dict, 0, sizeof(dict)); }

  /******************************************************
   * Функция добавления слова в словарь. Если слово уже было
   * в словаре, то второй раз оно в словарь не попадает
   ******************************************************/
  void add(const string & word);

  /******************************************************
   * Функция проверки наличия слова в словаре
   ******************************************************/
  bool hasWord(const string & word) const;
};

#endif
