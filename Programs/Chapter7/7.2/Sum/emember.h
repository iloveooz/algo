/***************************************************************
*  Структуры и алгоритмы обработки данных:                     *
*  объектно-ориентированный подход и реализация на C++         *
*      Глава 7. Обмен сообщениями и обработка сообщений        *
*          7.2. Об одном способе вычисления конечных сумм      *
*                                                              *
*  Автор    : А.Кубенский                                      *
*  Файл     : emember.h                                        *
*  Описание : Описание класса объекта-члена суммы ряда для     *
*             приближенного вычисления значения числа е        *
***************************************************************/

#ifndef __EMEMBER_H
#define __EMEMBER_H

#include "member.h"
#include "message.h"

//-------------------------------------------------------------
// Класс EMember описывает поведение объекта-члена суммы ряда
// для приближенного вычисления числа е как участника системы
// обмена сообщениями для суммирования
//-------------------------------------------------------------

class EMember : public Member {
  int number;      // Номер члена суммы (от нуля до некоторого n)
  double pred;     // Запомненное значение предыдущего члена
  bool accepted;   // Предыдущее значение получено?
  bool generated;  // Значение уже сгенерировано?

public :
  // Конструктор запоминает номер
  EMember(int i = 0) : number(i), generated(false), accepted(false) {}

  EMember(const EMember & src)
    : number(src.number), generated(src.generated),
      pred(src.pred), accepted(src.accepted) {}

  // Реализация операций по обмену сообщениями
  Message * generate();
  bool handle(const Message & msg);
};

//-------------------------------------------------------------
// Класс EMemberFactory описывает фабрику для создания объектов-
// членов суммы ряда для приближенного вычисления числа е
//-------------------------------------------------------------

class EMemberFactory : public MemberFactory {
public :
  Member * createMember(int i) const { return new EMember(i); }
};

#endif
