/***************************************************************
*  Структуры и алгоритмы обработки данных:                     *
*  объектно-ориентированный подход и реализация на C++         *
*      Глава 7. Обмен сообщениями и обработка сообщений        *
*          7.1. Схема обмена сообщениями                       *
*                                                              *
*  Автор    : А.Кубенский                                      *
*  Файл     : elevator.cpp                                     *
*  Описание : Реализация класса, определяющего поведение лифта *
***************************************************************/

#include "elevator.h"

// Функция генерации нового сообщения
Message * Elevator::generate() {
  // Новое сообщение не генерируется, если состояние лифта не изменилось
  if (!stateChanged) return NULL;
  // Генерация нового сообщения
  Message * newMessage = new ElevatorMessage(ElevatorMessage::MSG_STATE_CHANGED, state);
  // Сообщили об изменении состояния; можно сбрасывать признак
  // изменения состояния лифта
  stateChanged = false;

  return newMessage;
}

bool Elevator::handle(const Message & msg) {
  // Реализация этого метода отсутствует.

  // Лифт может обрабатывать различные сообщения, например:
  // - с течением времени могут приходить сообщения от таймера;
  //   таймерные сообщения могут повлиять на изменение состояния лифта
  //   просто потому, что лифт движется в некотором направлении;
  // - лифт может запоминать и обрабатывать сообщения (заявки) от
  //   пассажиров, желающих переехать на другой этаж;
  // - если в системе имеется несколько лифтов, то лифт может
  //   принимать сообщения от других лифтов о выполнении ими заявок
  return false;
}
