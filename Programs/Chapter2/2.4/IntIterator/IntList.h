/***************************************************************
*  Структуры и алгоритмы обработки данных:                     *
*  объектно-ориентированный подход и реализация на C++         *
*      Глава 2. Базовые алгоритмы                              *
*          2.4. Итераторы                                      *
*                                                              *
*  Автор       : А. Кубенский                                  *
*  Файл        : IntList.h                                     *
*  Описание    : Список целых: описание класса                 *
***************************************************************/

#ifndef __INT_LIST_H
#define __INT_LIST_H

#include "Actor.h"
#include <stdlib.h>

//**************************************************************
// Описание класса IntList
//**************************************************************

class IntList {
/* Структура ListItem представляет элемент списка, 
   связанный со следующим элементом с помощью указателя 'next'.
*/
  struct ListItem {
    int item;         // Элемент списка
    ListItem *next;   // Указатель на следующий элемент

    // Конструктор элемента ListItem
    ListItem(int i, ListItem *n = NULL) { item = i; next = n; }
  };

  int count;             // Счетчик числа элементов
  ListItem *first;       // Указатель на первый элемент
  ListItem *last;        // Указатель на последний элемент

public:

  // Конструктор "умолчания" создает пустой список
  IntList() { count = 0; first = last = 0; }

  // Деструктор списка
  ~IntList();

  // Number of elements - a simple inline function
  int getCount() { return count; }

  // Добавление элемента в конец списка
  void addLast(int item);

  // Операция прохождения списка
  void traverse(Actor & a);

  // Функция, представляющая внутренний итератор списка 
  // для просмотра элементов списка в обратном порядке.
  void traverseBack(Actor & a) { traverseBackRec(a, first); }

private :
  // Вспомогательная рекурсивная функция, обеспечивающая
  // обратную итерацию элементов списка, начиная с элемента list.
  void traverseBackRec(Actor & a, ListItem * list);
};

#endif
