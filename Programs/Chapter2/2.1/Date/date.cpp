/***************************************************************
*  Структуры и алгоритмы обработки данных:                     *
*  объектно-ориентированный подход и реализация на C++         *
*      Глава 2. Базовые алгоритмы                              *
*          2.1. Абстрактные типы данных                        *
*                                                              *
*  Автор    : А.Кубенский                                      *
*  Файл     : date.cpp                                         *
*  Описание : Общие функции арифметики дат для абстрактного    *
*             типа данных Date                                 *
***************************************************************/

#include <stdio.h>
#include "date.h"

//==============================================================
// Функция leapYear проверяет, является ли заданный год
// високосным в соответствии с правилами Григорианского календаря
//==============================================================
bool leapYear(int year) {
  return year % 4 == 0 && (year % 100 != 0 || year % 400 == 0);
}

//==============================================================
// Функция daysInMonth вычисляет количество дней
// в заданном месяце заданного года
//==============================================================
int daysInMonth(int month, int year) {
  // длины месяцев в днях (для невисокосного года)
  static int monthLengths[] =
     { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
  // В случае февраля високосного года добавляется один день
  return monthLengths[month-1] + (month == FEBRUARY && leapYear(year));
}

//==============================================================
// Форматирование даты. 
// Поддерживается только один простой формат дат: dd-mmm-yyyy
//==============================================================

const char * Date::format() const {
  // Названия месяцев в формате mmm
  static const char * monthNames[] = {
    "Jan", "Feb", "Mar", "Apr", "May", "Jun",
    "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" 
  };

  // Для результата резервируется символьный буфер
  char * result = new char[12];
  // Дата форматируется и записывается в буфер
  sprintf(result, "%2d-%s-%4d", 
          getDate(), monthNames[getMonth() - 1], getYear());
  return result;
}
