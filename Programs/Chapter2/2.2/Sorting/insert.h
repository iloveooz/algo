/***************************************************************
*  Структуры и алгоритмы обработки данных:                     *
*  объектно-ориентированный подход и реализация на C++         *
*      Глава 2. Базовые алгоритмы                              *
*          2.2. Сортировка и поиск в массивах                  *
*                                                              *
*  Автор    : А.Кубенский                                      *
*  Файл     : insert.h                                         *
*  Описание : Функция вставки нового элемента в упорядоченный  *
*             массив                                           *
***************************************************************/

#ifndef __INSERT_H
#define __INSERT_H

//-------------------------------------------------------------
// Шаблон insert задает функцию двоичного поиска и вставки
// нового элемента в упорядоченном массиве.
//   - Key - класс, задающий тип элементов массива;
//   - array - упорядоченный массив;
//   - low, high - индексы, задающие диапазон поиска;
//   - key - новый вставляемый ключ.
//-------------------------------------------------------------

template <class Key>
void insert(Key * array, int low, int high, const Key & key) {
  // Предполагается, что в начале работы low <= high,
  // причем в массиве имеется место для еще хотя бы одного элемента.
  // В результате вставки получается упорядоченный фрагмент массива
  // в диапазоне от low до high+1
  if (array[high] <= key) {
    // Новый элемент становится последним элементом массива
    array[high+1] = key;
  } else {
    int border = high;    // запоминаем старую границу массива
    // поиск места вставки как в функции binSearch
    while (low < high) {
      int middle = (low + high) / 2;   
      // middle - середина диапазона; low <= middle < high
      if (array[middle] >= key) high = middle; else low = middle + 1;
      // после проверки low <= high, причем array[high] >= key
    }
    // Здесь low == high, причем array[high] >= key
    // Сдвигаем элементы массива начиная от места вставки
    for (int i = border; i >= low; i--) {
      array[i+1] = array[i];
    }
    // Собственно вставка элемента
    array[low] = key;
  }
}

#endif
